{"version":3,"file":"component---src-templates-blog-page-js-7c9bd6fce8fede6570cd.js","mappings":"qJA8BA,IA3Be,SAAHA,GAAcA,EAARC,SAAeD,EAALE,MAAuB,IAAhBC,EAAQH,EAARG,SAmBjC,OACEC,EAAAA,cAAA,OAAKC,UAAU,kBAEbD,EAAAA,cAAA,YAAOD,GAGb,C,+CCjBMG,EAAM,SAAHN,GAAgD,IAADO,EAAAC,EAAAC,EAAzCC,EAAWV,EAAXU,YAAmBR,GAAFF,EAAJW,KAAWX,EAALE,OAAOC,EAAQH,EAARG,SAC/BS,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAmCFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBL,MAExC,OACEE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQY,EAAkBd,EAAK,MAAMc,EAAiBd,GACtDE,EAAAA,cAAA,QAAMa,KAAK,cAAcC,QAASJ,IAClCV,EAAAA,cAAA,QAAMe,SAAS,WAAWD,QAAShB,IACnCE,EAAAA,cAAA,QAAMe,SAAS,iBAAiBD,QAASJ,IACzCV,EAAAA,cAAA,QAAMe,SAAS,UAAUD,QAAQ,YACjCd,EAAAA,cAAA,QAAMa,KAAK,eAAeC,QAAQ,YAClCd,EAAAA,cAAA,QACEa,KAAK,kBACLC,SAA0B,QAAjBV,EAAAI,EAAKG,oBAAY,IAAAP,GAAQ,QAARC,EAAjBD,EAAmBY,cAAM,IAAAX,OAAR,EAAjBA,EAA2BY,QAAQC,WAAQ,KAEtDlB,EAAAA,cAAA,QAAMa,KAAK,gBAAgBC,QAAShB,IACpCE,EAAAA,cAAA,QAAMa,KAAK,sBAAsBC,QAASJ,IACzCX,EAGP,EAEAG,EAAIiB,aAAe,CACjBb,YAAY,IAQd,K,6GChDac,EAAO,SAAHC,GAA4C,IAAdC,EAAID,EAA5BE,KAAQC,eAC7B,OAAOxB,EAAAA,cAACE,EAAAA,EAAG,CAACJ,MAAOwB,EAAKG,GAAInB,YAAagB,EAAKI,SAChD,EAEA,UA5ByB,SAAH9B,GAGf,IAAD+B,EAAA/B,EAFJ2B,KAAQf,EAAImB,EAAJnB,KAAsBc,EAAIK,EAApBH,eACd3B,EAAQD,EAARC,SAEA,OACEG,EAAAA,cAAC4B,EAAAA,EAAM,CAAC/B,SAAUA,EAAUC,MAAOU,EAAKG,aAAab,OACnDE,EAAAA,cAAA,WACEC,UAAU,YACV4B,WAAS,EACTC,SAAS,6BAET9B,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAI+B,SAAS,YAAYT,EAAKU,OAAOC,OAEvCjC,EAAAA,cAAA,WACEkC,wBAAyB,CAAEC,OAAQb,EAAKc,MACxCL,SAAS,gBAEX/B,EAAAA,cAAA,YAIR,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-page.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  // const isRootPath = location.pathname === rootPath\n  // let header\n\n  // if (isRootPath) {\n  //   header = (\n  //     <h1 className=\"main-heading\">\n  //       <Link to=\"/\">{title}</Link>\n  //     </h1>\n  //   )\n  // } else {\n  //   header = (\n  //     <Link className=\"header-link-home\" to=\"/\">\n  //       {title}\n  //     </Link>\n  //   )\n  // }\n\n  return (\n    <div className=\"global-wrapper\">\n      {/* <header className=\"global-header\">{header}</header> */}\n      <main>{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter {\n                title\n                url\n                username\n              }\n              github {\n                title\n                url\n                username\n              }\n              instagram {\n                title\n                url\n                username\n              }\n              email {\n                title\n                url\n                username\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter.username || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPageTemplate = ({\n  data: { site, markdownRemark: page },\n  location,\n}) => {\n  return (\n    <Layout location={location} title={site.siteMetadata.title}>\n      <article\n        className=\"blog-page\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{page.fields.slug}</h1>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: page.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: page } }) => {\n  return <Seo title={page.id} description={page.excerpt} />\n}\n\nexport default BlogPageTemplate\n\nexport const pageQuery = graphql`\n  query BlogPageBySlug($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"names":["_ref","location","title","children","React","className","Seo","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","username","defaultProps","Head","_ref2","page","data","markdownRemark","id","excerpt","_ref$data","Layout","itemScope","itemType","itemProp","fields","slug","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}